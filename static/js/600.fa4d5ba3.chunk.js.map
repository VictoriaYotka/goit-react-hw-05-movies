{"version":3,"file":"static/js/600.fa4d5ba3.chunk.js","mappings":"mJAQA,IARa,SAAC,GAA2B,IAA1BA,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UACvB,OACE,eAAIA,UAAWA,EAAf,SACKD,GAGR,C,mBCND,IACME,EAAU,CAACC,QAAS,CAACC,cAAe,+NAU1C,IARA,SAAoBC,GAChB,OAAOC,MAAM,GAAD,OAJC,+BAID,YAAgBD,GAASH,GAASK,MAAM,SAAAC,GAChD,OAAIA,EAASC,GAEND,EAASE,OAFQC,QAAQC,OAAOJ,EAASK,OAGnD,GACJ,C,6ICRD,EAAwB,0BAAxB,EAA2D,2B,SCU3D,EATmB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACE,kBAAMC,SAAUD,EAAhB,WACI,kBAAOE,KAAK,QAAQC,KAAK,OAAOC,WAAS,EAACC,YAAY,cAAclB,UAAWmB,KAC/E,mBAAQH,KAAK,SAAShB,UAAWmB,EAAjC,SAA6C,aAGpD,EC0CD,EA5Ce,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,iBAAlB,QAA+B,IAAjE,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,WACK,KAAV5B,IACDuB,GAAa,IACbM,EAAAA,EAAAA,GAAU,sBAAD,OAAuB7B,IAC/BE,MAAK,YAAgB,IAAd4B,EAAa,EAAbA,QACNL,GAAU,OAAIK,GACf,IACAC,MAAMC,QAAQC,KACdC,SAAQ,kBAAMX,GAAa,EAAnB,IACT,GAAE,CAACvB,IAEL,IAWMmC,EAAaX,EAAOY,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OAAiB,eAAa1C,UAAU,YAAvB,UAC7C,SAAC,KAAD,CAAS2C,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMf,GAAY9B,UAAU,OAAnE,SAA2E0C,KADrBD,EAA1B,IAI9B,OACE,4BACE,SAAC,EAAD,CAAY5B,aAjBK,SAACiC,GACpBA,EAAMC,iBACN,IAAM3C,EAAQ0C,EAAME,OAAOC,SAASC,MAAMC,MAAMC,OAEnC,KAAVhD,IAEHkB,EAAgB,CAAC+B,OAAQjD,IACzBqB,EAASrB,GACT0C,EAAME,OAAOM,QACd,IASI5B,IAAa,SAAC6B,EAAA,EAAD,IACb3B,IAAU,SAAC4B,EAAA,EAAD,CAAMzD,SAAUwC,IACR,IAAlBX,EAAO6B,QAA0B,KAAVrD,IACtB,uBAAG,8CAGV,C","sources":["components/List/List.jsx","components/services.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const List = ({children, className}) => {\n  return (\n    <ul className={className}>\n        {children}\n    </ul>\n  )\n}\n\nexport default List","const BASE_URL = 'https://api.themoviedb.org/3';\nconst OPTIONS = {headers: {Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxZWIxOWFlZTJiNTU2ZTg3MmFlYjRkMTJmM2UzZDBlZiIsInN1YiI6IjY0NmY2NjQzMTdjNDQzMDBjMjI0OTMzZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nSQ1KLIUK97f2ypbV38GEeFR4HBt9RE_gR1cSa6SUjM'}}\n\nfunction fetchFunc (query) {\n    return fetch(`${BASE_URL}/${query}`, OPTIONS).then( response => {\n        if(!response.ok) return Promise.reject(response.status)\n        // console.log(response)\n        return response.json(); \n    })\n}\n\nexport default fetchFunc;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import css from './SearchForm.module.css'\n\nconst SearchForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n        <input name=\"movie\" type=\"text\" autoFocus placeholder=\"Movie title\" className={css.input}/>\n        <button type=\"submit\" className={css.button}>Search</button>\n    </form>\n  )\n}\n\nexport default SearchForm","import { useState, useEffect } from \"react\";\nimport fetchFunc from \"components/services\";\nimport { NavLink, useLocation, useSearchParams } from \"react-router-dom\";\nimport Loading from \"components/Loading/Loading\";\nimport List from \"components/List/List\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('search') ?? '');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  \nuseEffect(() => {\n  if(query !== '') {\n    setIsLoading(true);\n    fetchFunc(`search/movie?query=${query}`)\n    .then(({results}) => {\n      setMovies([...results])\n    })\n    .catch(console.log)\n    .finally(() => setIsLoading(false))\n  }}, [query])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const query = event.target.elements.movie.value.trim();\n  \n    if(query === '') return\n  \n    setSearchParams({search: query})\n    setQuery(query);\n    event.target.reset();\n  }\n\n  const moviesList = movies.map(({id, title}) => <li key={id} className='list_item'>\n    <NavLink to={`/movies/${id}`} state={{ from: location }} className='link'>{title}</NavLink>\n    </li>);\n\n  return (\n    <div>\n      <SearchForm handleSubmit={handleSubmit}/>\n      {isLoading && <Loading/>}\n      {movies && <List children={moviesList}/> }\n      {movies.length === 0 && query !== '' &&\n        <p>We've found nothing. Try another query!</p>}\n    </div>\n  )\n}\n\nexport default Movies"],"names":["children","className","OPTIONS","headers","Authorization","query","fetch","then","response","ok","json","Promise","reject","status","handleSubmit","onSubmit","name","type","autoFocus","placeholder","css","useSearchParams","searchParams","setSearchParams","useState","get","setQuery","isLoading","setIsLoading","movies","setMovies","location","useLocation","useEffect","fetchFunc","results","catch","console","log","finally","moviesList","map","id","title","to","state","from","event","preventDefault","target","elements","movie","value","trim","search","reset","Loading","List","length"],"sourceRoot":""}